version: '2.3.0'
services:
  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    network_mode: 'host'
    user: root
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - ./prometheus:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=90d # 90일보다 오래된 metrics는 삭제
      - --storage.tsdb.retention.size=10GB # 10GB를 넘을 시 오래된 metrics 삭제
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/proemtheus/consoles
      - --web.enable-admin-api

  grafana:
    container_name: grafana
    image: grafana
    build: ./grafana
    user: root
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin # grafana 사용자 이름
      - GF_SECURITY_ADMIN_PASSWORD=admin # grafana 사용자 비밀번호
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    logging:
      driver: 'json-file'
      options:
        max-size: '8m'
        max-file: '10'
    networks:
      - logging_network
  jenkins:
    # Container 이름
    container_name: jenkins
    # image 이름
    image: jenkins/jenkins
    build: ./jenkins
    # volume 할당
    volumes:
      - ./jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock ubuntu/jenkins_home
      - /usr/bin/docker:/usr/bin/docker
    ports:
      - '8080:8080'
      - '50000:50000'
    environment:
      - TZ=Asia/Seoul
    user: root
    networks:
      - pipeline_network
      - logging_network

networks:
  # pipeline 전용 private network
  pipeline_network:
    driver: bridge
  logging_network:
    driver: bridge
  application_network:
    driver: bridge
  host_network:
    driver: host
